1. How did viewing a diff between two versions help you see the bug that was
introduced?

It highlights the differences between the versions and greatly narrows down 
where the bug could be.

2. How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It saves times whenever I want to go back to what I had before. Also, having 
a record ensures I never lose anything, regardless of if I think I
need it or not.

3. What do you think are the pros and cons of manually choosing when to 
create a commit, like you do in Git, vs having versions automatically 
saved, like Google Docs does?

Automatic saves can produce saves or "commits" that might not make as much 
as if the user manually saved it. However, automatic saves also guarantee
that the user doesn't forget to make a commit.

4. Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

For files that are inter-related, saving them together is handy in order to 
track them together. Separate file management, however, gives more control to
the user.

5. How can you use the commands git log and git diff to view the history of
files?

git log shows the entire commit history of all the files in the repository 
and git diff compares any two commits.
